(()=>{"use strict";var e={982:(e,t,n)=>{n.d(t,{Z:()=>c});var r=n(537),a=n.n(r),i=n(645),o=n.n(i)()(a());o.push([e.id,"body {\n    display: flex;\n    flex-direction: column;\n}\n\n#header {\n    position: relative;\n    text-align: center;\n    font-size: 2em;\n}\n\n#review {\n    font-size: 1.2em;\n}\n\nimg {\n    width: 400px;\n    height: auto;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.menuItem {\n    position: relative;\n    text-align: center;\n    font-size: 1.5em;\n}\n\n.tabLinks {\n    width: 100px;\n    height: 100px;\n}","",{version:3,sources:["webpack://./src/style/style.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;IAClB,cAAc;AAClB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,YAAY;IACZ,aAAa;AACjB",sourcesContent:["body {\n    display: flex;\n    flex-direction: column;\n}\n\n#header {\n    position: relative;\n    text-align: center;\n    font-size: 2em;\n}\n\n#review {\n    font-size: 1.2em;\n}\n\nimg {\n    width: 400px;\n    height: auto;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.menuItem {\n    position: relative;\n    text-align: center;\n    font-size: 1.5em;\n}\n\n.tabLinks {\n    width: 100px;\n    height: 100px;\n}"],sourceRoot:""}]);const c=o},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,a,i){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(o[s]=!0)}for(var u=0;u<e.length;u++){var d=[].concat(e[u]);r&&o[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),t.push(d))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(a," */"),o=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(o).concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},o=[],c=0;c<e.length;c++){var s=e[c],u=r.base?s[0]+r.base:s[0],d=i[u]||0,l="".concat(u," ").concat(d);i[u]=d+1;var m=n(l),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==m)t[m].references++,t[m].updater(p);else{var A=a(p,r);r.byIndex=c,t.splice(c,0,{identifier:l,updater:A,references:1})}o.push(l)}return o}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var i=r(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<i.length;o++){var c=n(i[o]);t[c].references--}for(var s=r(e,a),u=0;u<i.length;u++){var d=n(i[u]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}i=s}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var i=t[r]={id:r,exports:{}};return e[r](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),a=n.n(r),i=n(569),o=n.n(i),c=n(565),s=n.n(c),u=n(216),d=n.n(u),l=n(589),m=n.n(l),p=n(982),A={};function f(){const e=document.createElement("div"),t=document.createElement("img"),n=document.createElement("div");return e.setAttribute("id","header"),e.innerText="Generic Restaurant",t.setAttribute("id","backgroundImage"),t.setAttribute("src","/src/D69aQ0gk_400x400 (1).jpg"),n.setAttribute("id","review"),n.innerText="Lorem ipsum dolor sit amet consectetur adipisicing elit. Assumenda iure sequi quod? Laudantium totam blanditiis et dolor ab enim tempore, explicabo temporibus quibusdam, aperiam accusamus provident dolorum doloribus assumenda repudiandae ?",{title:e,backgroundImage:t,review:n}}A.styleTagTransform=m(),A.setAttributes=s(),A.insert=o().bind(null,"head"),A.domAPI=a(),A.insertStyleElement=d(),t()(p.Z,A),p.Z&&p.Z.locals&&p.Z.locals;const h=document.createElement("button"),b=document.createElement("button"),v=document.createElement("button"),g=document.getElementById("content"),C=f(),y=function(){const e=document.createElement("div"),t=document.createElement("div"),n=document.createElement("div"),r=document.createElement("div"),a=document.createElement("div"),i=document.createElement("div"),o=document.createElement("div"),c=document.createElement("div"),s=document.createElement("div"),u=document.createElement("img"),d=document.createElement("img"),l=document.createElement("img"),m=document.createElement("img"),p=document.createElement("img"),A=document.createElement("img"),f=document.createElement("img"),h=document.createElement("img");return e.setAttribute("id","header"),e.innerText="MENU",t.setAttribute("class","menuItem"),t.innerText="Steak",u.setAttribute("src","/src/style/food/pexels-valeria-boltneva-1251208.jpg"),t.appendChild(u),n.setAttribute("class","menuItem"),n.innerText="Burger",d.setAttribute("src","/src/style/food/pexels-rajesh-tp-1633578.jpg"),n.appendChild(d),r.setAttribute("class","menuItem"),r.innerText="Eggs",l.setAttribute("src","/src/style/food/pexels-christopher-alonzo-588776.jpg"),r.appendChild(l),a.setAttribute("class","menuItem"),a.innerText="Sandwich",m.setAttribute("src","/src/style/food/pexels-rajesh-tp-1633525.jpg"),a.appendChild(m),i.setAttribute("class","menuItem"),i.innerText="Chicken",p.setAttribute("src","/src/style/food/pexels-omar-mahmood-106343.jpg"),i.appendChild(p),o.setAttribute("class","menuItem"),o.innerText="Salad",A.setAttribute("src","/src/style/food/pexels-daria-shevtsova-1580466.jpg"),o.appendChild(A),c.setAttribute("class","menuItem"),c.innerText="Beer",f.setAttribute("src","/src/style/food/milton-wiklund-7OZUmXRcgOE-unsplash.jpg"),c.appendChild(f),s.setAttribute("class","menuItem"),s.innerText="Mixed Drink",h.setAttribute("src","/src/style/food/andreas-m-Ug8GLlQT1oE-unsplash.jpg"),s.appendChild(h),{title:e,menuItem1:t,menuItem2:n,menuItem3:r,menuItem4:a,menuItem5:i,menuItem6:o,menuItem7:c,menuItem8:s}}();let E={class:"tabLinks",onclick:k("home")},I={class:"tabLinks",onclick:'openPage("menu")'},x={class:"tabLinks",onclick:'openPage("contactUs")'};function k(e){switch(g.innerHTML="",g.appendChild(h),g.appendChild(b),g.appendChild(v),e){case"contactUs":g.appendChild(function(){const e=document.createElement("form"),t=document.createElement("label"),n=document.createElement("input"),r=document.createElement("label"),a=document.createElement("input"),i=document.createElement("button"),o={type:"text",id:"emailInput",name:"emailInput",value:"email@place.com"},c={type:"text",id:"commentInput",name:"commentInput",value:""};return t.getAttribute("for","email"),r.getAttribute("for","text"),Object.keys(o).forEach((e=>{n.setAttribute(e,o[e])})),Object.keys(c).forEach((e=>{a.setAttribute(e,c[e])})),e.appendChild(t),e.appendChild(n),e.appendChild(r),e.appendChild(a),e.appendChild(i),e}());break;case"home":Object.keys(C).forEach((e=>{g.appendChild(C[e])}));break;case"menu":Object.keys(y).forEach((e=>{g.appendChild(y[e])}))}}Object.keys(E).forEach((e=>{h.setAttribute(e,E[e])})),h.addEventListener("click",k("home")),Object.keys(I).forEach((e=>{b.setAttribute(e,I[e])})),Object.keys(x).forEach((e=>{v.setAttribute(e,x[e])})),Object.keys(f).forEach((e=>{g.appendChild(f[e])})),g.appendChild(h),g.appendChild(b),g.appendChild(v),k("home"),k("menu")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,